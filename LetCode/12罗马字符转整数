public int romanToInt(String s) {
        int ans = 0;
        int[] arr = new int[s.length()];//用于储存装换而来的数字

        for (int i = 0; i < s.length(); i++) {//简单对应罗马字符装换成数字
            char c = s.charAt(i);

            if(c == 'I') arr[i] = 1;
            else if(c == 'V') arr[i] = 5;
            else if(c == 'X') arr[i] = 10;
            else if(c == 'L') arr[i] = 50;
            else if(c == 'C') arr[i] = 100;
            else if(c == 'D') arr[i] = 500;
            else if(c == 'M') arr[i] = 1000;
        }

        for (int i = 0; i < s.length(); i++) {
            if(i + 1 <= s.length() - 1){//避免过界，nmdjava
                if((arr[i] < arr[i + 1]))//根据罗马字符的特性，如果前一位字符小于后一位字符，则总数要减去前一位字符
                    ans -= arr[i];
                else
                    ans += arr[i];
            }else{//此时数组中只剩下一位，直接加上即可
                ans += arr[i];
            }

        }

        return ans;
    }
