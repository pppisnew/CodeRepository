class Solution {
    public boolean isNumber(String s) {
        /*
        思路记录状态，每次检查一个新的字符都用之前的已记录状态进行处理
        */
        int n = s.length();

        if(n == 0){
            return false;
        }

        boolean pathNum =false;//记录i - 1字符是否是有效数字
        boolean pathDot = false;//记录是否有小数点
        boolean pathEe = false;//记录是否有e/E的出现

        for(int i = 0; i < n; i ++){
           
           switch(s.charAt(i)){
            case '+':
            case '-': {
                if(i != 0 && s.charAt(i - 1) != 'e' && s.charAt(i - 1) != 'E'){//若不是在首位，且前一位不是指数符
                    return false;
                }
                pathNum = false;//记录+/-不属于有效数字
                break;
            }
            case '.' : {
                if(pathDot || pathEe){//若是在以出现dot和e的情况下再出现dot
                    return false;
                }
                pathDot = true;//因为dot属于有效数字的一部分，且不属于决定部位，故不对pathNum进行更改
                break;
            }
            case 'e' : 
            case 'E' : {
                if(pathEe || !pathNum){//若是出现在已有e或者非有效数字后面
                    return false;
                }
                pathEe = true;
                pathNum = false;//e不属于有效数字的一部分
                break;
            }
            default :{
                if(s.charAt(i) < '0' || s.charAt(i) > '9'){//若存在既不是数字又不是以上字符的字符
                    return false;
                }
                pathNum = true;//记录数字
            }

           }
        }

        return pathNum;//若整体是有效数字，则最后的判断中pathNum一定有效
    }
}
